def meet_in_the_middle(arr, target):
    n = len(arr)
    mid = n // 2
    left = [sum(subset) for i in range(1 << mid) for subset in [arr[j] for j in range(mid) if (i & (1 << j))]]
    right = [sum(subset) for i in range(1 << (n - mid)) for subset in [arr[j] for j in range(mid, n) if (i & (1 << (j - mid)))]]]
    
    left.sort()
    return any(target - r in left for r in right)

# Example usage
arr = [1, 2, 3, 4, 5]
target = 9
print(meet_in_the_middle(arr, target))  # Output: True
