import networkx as nx

def is_unique_mst(graph, mst_edges):
    mst_weight = sum(graph[u][v]['weight'] for u, v in mst_edges)
    all_msts = list(nx.minimum_spanning_edges(graph, data=False))
    unique = all(mst_weight == sum(graph[u][v]['weight'] for u, v in all_msts[i]) for i in range(len(all_msts)))
    
    if unique:
        return True, None
    else:
        return False, all_msts[1]  # Return another MST

# Example usage
G = nx.Graph()
G.add_weighted_edges_from([(1, 2, 1), (1, 3, 2), (2, 3, 1)])
mst_edges = [(1, 2), (1, 3)]
is_unique, alternative_mst = is_unique_mst(G, mst_edges)
print("Is unique MST:", is_unique)
if alternative_mst:
    print("Alternative MST:", alternative_mst)
